<import name="q-notice" src="qaui/src/components/notice/index"></import>
<template>
    <div class="wrapper">

        <div style="display:flex;flex-direction:column;" class="bg">
        <q-notice if={{lognotice.show}} notice-text={{lognotice.text}} type={{lognotice.type}} right-icon-type="link" onlink-tap="logNoticeClose"></q-notice>
        <q-notice if={{signnotice.show}} notice-text={{signnotice.text}} type={{signnotice.type}} right-icon-type="link" onlink-tap="signNoticeClose"></q-notice>
        </div>
        <div class="form">
            <image src="../../assets/images/log/logicon.png" id="logicon"></image>
            <image src="../../assets/images/log/logiconpw.png" id="logiconpw"></image>
            <input class="textinput" id="un" type="text" value="{{username}}" @change="usernameChanged"></input>
            <input class="textinput" id="pw" type="password" model:value="{{password}}" @change="passwordChanged"></input>
            <input class="btn login" id="log" type="button" value="登录" onclick="logClick"/>
            <input class="btn signup" id="sign" type="button" value="注册" onclick="signupClick"/>

        </div>
    </div>
</template>
<script>
import router from '@system.router'
//import app from "../../helper/global"
import fetch from '@system.fetch' 
import notification from '@system.notification'
import cipher from "@system.cipher"
export default{
    data() {
        return {
            username:"",
            password:"",
            lognotice:{
                show:false,
                text:"err",
                type:"normal",
            },
            signnotice:{
                show:false,
                text:"err",
                type:"normal"
            },
        }
    },
    onInit() {
       //console.log(this.$app.$def)
    },
    logClick(){



        let that = this;
        var paras={
            url:this.$app.$def.url+":20002/auth/getPublicKey",
            method:"POST",
            header:{
                "Content-Type":"application/json"
            },
            data:{
                "username":this.username,
            },
        }
        fetch.fetch(paras).then(Response=>{
            var retData = JSON.parse(Response.data.data);
            if(retData.code==0){
                //用户名存在
                cipher.rsa({
                    action: 'encrypt',
                    //待加密的文本内容
                    text: that.password,
                    //base64编码后的加密公钥
                    key:retData.data,
                    success: function(data) {
                        let pwd = data.text
                        fetch.fetch({
                            url:that.$app.$def.url+":20002/auth/logging",
                            method:"POST",
                            header:{
                                "Content-Type":"application/json"
                            },
                            data:{
                                "username":that.username,
                                "password":that.password,
                            },
                        }).then(Response=>{
                            var resData = JSON.parse(Response.data.data)
                            //console.log(resData)
                            if(resData.code==0){
                                //成功登录
                                that.$app.$def.UserData.UserId=resData.data.userid;
                                
                                that.$app.$def.UserData.UserName=resData.data.username;
                                if(resData.data.hasmap==0){//没有地图
                                    fetch.fetch({
                                        url:that.$app.$def.url+":20002/map/initMap",
                                        method:"POST",
                                        header:{
                                            "Content-Type":"application/json"
                                        },
                                        data:{
                                            "userid":resData.data.userid,
                                        }
                                    }).then((response)=>{

                                        var res = JSON.parse(response.data.data);
                                        
                                        if(res.code==0){//创建成功
                                            //console.log(res)
                                            that.$app.$def.globalData.curPos=JSON.parse(res.data.mapEntity.currentposition);
                                            that.$app.$def.globalData.graphSeed=res.data.mapEntity.seed;
                                            that.$app.$def.globalData.mapid=res.data.mapEntity.mapid;
                                            if(res.data.player.playing==0){
                                                that.$app.$def.PlayerData.playing=false;
                                            }else{
                                                that.$app.$def.PlayerData.playing=true;
                                            }
                                            that.$app.$def.PlayerData.playat=JSON.parse(res.data.player.playPos)
                                            that.$app.$def.PlayerData.cardids=JSON.parse(res.data.player.cardids)
                                            that.$app.$def.PlayerData.maxhp=res.data.player.maxhp
                                            that.$app.$def.PlayerData.nowhp=res.data.player.nowhp
                                            that.$app.$def.PlayerData.playing=res.data.player.playing
                                            router.push({
                                                uri:"/pages/GameMap"
                                            })
                                        }else{
                                            console.error(res.msg)
                                        }
                                    }).catch(err=>{ 
                                        console.error(err);
                                    })
                                    //需要初始化地图
                                    //获取地图id，种子
                                }else{//读取地图
                                    //console.log(data.data.userid)
                                    fetch.fetch({
                                        url:that.$app.$def.url+":20002/map/read",
                                        method:"POST",
                                        header:{
                                            "Content-Type":"application/json"
                                        },
                                        data:{
                                            "userid":resData.data.userid,
                                        }
                                    }).then((response)=>{
                                        
                                        var res = JSON.parse(response.data.data);
                                        //console.log(res)
                                        if(res.code==2){//读取成功
            
                                            that.$app.$def.globalData.curPos=JSON.parse(res.data.mapEntity.currentposition);
                                            that.$app.$def.globalData.graphSeed=res.data.mapEntity.seed;
                                            that.$app.$def.globalData.mapid=res.data.mapEntity.mapid;
                                            if(res.data.player.playing==0){
                                                that.$app.$def.PlayerData.playing=false;
                                            }else{
                                                that.$app.$def.PlayerData.playing=true;
                                            }
                                            that.$app.$def.PlayerData.playat=JSON.parse(res.data.player.playPos)
                                            that.$app.$def.PlayerData.maxhp=res.data.player.maxhp
                                            that.$app.$def.PlayerData.nowhp=res.data.player.nowhp
                                            that.$app.$def.PlayerData.cardids=JSON.parse(res.data.player.cardids)
                                            that.$app.$def.PlayerData.playing=res.data.player.playing
                                            router.push({
                                                uri:"/pages/GameMap"
                                            })
                                        }else{
                                            console.error(res.msg)
                                        }
                                    }).catch(err=>{ 
                                        console.error(err);
                                    })
                                }
                            }else{
                                that.lognotice.text="用户名或密码不存在"
                                that.lognotice.show=true;
                            }
                        }).catch(Error=>{
                            that.lognotice.text="用户名或密码不存在"
                            that.lognotice.show=true;
                        })
                    },
                    fail: function(data, code) {
                        console.log(`### cipher.rsa fail ### ${code}: ${data}`)
                    }
                })
            }
            else{
                that.lognotice.text="用户名或密码不存在"
                that.lognotice.show=true;
            }
        }).catch(Error=>{
            console.error(Error)
        })



        // let thatrouter = router;
        // let that = this
        // var paras={
        //     url:this.$app.$def.url+":20002/auth/logging",
        //     method:"POST",
        //     header:{
        //         "Content-Type":"application/json"
        //     },
        //     data:{
        //         "username":this.username,
        //         "password":this.password
        //     },
        // }
        // fetch.fetch(paras).then((response)=>{
        //     try{
        //         var data = JSON.parse(response.data.data)
                
        //         if(data.code==1){
        //             that.lognotice.text="用户名或密码不存在"
        //             that.lognotice.show=true;
        //         }else if(data.code==0){
        //             // console.log(1)
        //             // console.log(data)
        //             // console.log(2)
        //             this.$app.$def.UserData.UserId=data.data.userid;
                    
        //             this.$app.$def.UserData.UserName=data.data.username;
        //             if(data.data.hasmap==0){//没有地图
        //                 fetch.fetch({
        //                     url:this.$app.$def.url+":20002/map/initMap",
        //                     method:"POST",
        //                     header:{
        //                         "Content-Type":"application/json"
        //                     },
        //                     data:{
        //                         "userid":data.data.userid,
        //                     }
        //                 }).then((response)=>{

        //                     var res = JSON.parse(response.data.data);
                            
        //                     if(res.code==0){//创建成功
        //                         //console.log(res)
        //                         this.$app.$def.globalData.curPos=JSON.parse(res.data.mapEntity.currentposition);
        //                         this.$app.$def.globalData.graphSeed=res.data.mapEntity.seed;
        //                         this.$app.$def.globalData.mapid=res.data.mapEntity.mapid;
        //                         if(res.data.player.playing==0){
        //                             this.$app.$def.PlayerData.playing=false;
        //                         }else{
        //                             this.$app.$def.PlayerData.playing=true;
        //                         }
        //                         this.$app.$def.PlayerData.playat=JSON.parse(res.data.player.playPos)
        //                         this.$app.$def.PlayerData.cardids=JSON.parse(res.data.player.cardids)
        //                         this.$app.$def.PlayerData.maxhp=res.data.player.maxhp
        //                         this.$app.$def.PlayerData.nowhp=res.data.player.nowhp
        //                         this.$app.$def.PlayerData.playing=res.data.player.playing
        //                         router.push({
        //                             uri:"/pages/GameMap"
        //                         })
        //                     }else{
        //                         console.error(res.msg)
        //                     }
        //                 }).catch(err=>{ 
        //                     console.error(err);
        //                 })
        //                 //需要初始化地图
        //                 //获取地图id，种子
        //             }else{//读取地图
        //                 //console.log(data.data.userid)
        //                 fetch.fetch({
        //                     url:this.$app.$def.url+":20002/map/read",
        //                     method:"POST",
        //                     header:{
        //                         "Content-Type":"application/json"
        //                     },
        //                     data:{
        //                         "userid":data.data.userid,
        //                     }
        //                 }).then((response)=>{
                            
        //                     var res = JSON.parse(response.data.data);
        //                     //console.log(res)
        //                     if(res.code==2){//读取成功
  
        //                         this.$app.$def.globalData.curPos=JSON.parse(res.data.mapEntity.currentposition);
        //                         this.$app.$def.globalData.graphSeed=res.data.mapEntity.seed;
        //                         this.$app.$def.globalData.mapid=res.data.mapEntity.mapid;
        //                         if(res.data.player.playing==0){
        //                             this.$app.$def.PlayerData.playing=false;
        //                         }else{
        //                             this.$app.$def.PlayerData.playing=true;
        //                         }
        //                         this.$app.$def.PlayerData.playat=JSON.parse(res.data.player.playPos)
        //                         this.$app.$def.PlayerData.maxhp=res.data.player.maxhp
        //                         this.$app.$def.PlayerData.nowhp=res.data.player.nowhp
        //                         this.$app.$def.PlayerData.cardids=JSON.parse(res.data.player.cardids)
        //                         this.$app.$def.PlayerData.playing=res.data.player.playing
        //                         router.push({
        //                             uri:"/pages/GameMap"
        //                         })
        //                     }else{
        //                         console.error(res.msg)
        //                     }
        //                 }).catch(err=>{ 
        //                     console.error(err);
        //                 })
        //             }

        //         }
        //         else{
        //             console.error(response)
        //         }
        //     }catch(err){
        //         console.error(err)
        //     }
        // }).catch(err=>{
        //     console.error(err);
        // })
        // router.push({
        //     uri:"/pages/GameMap"
        // })
    },
    logNoticeClose(){
        this.lognotice.show=false;
    },
    signNoticeClose(){
        this.signnotice.show=false;
    },
    signupClick(){
        let that = this;
        var paras={
            url:this.$app.$def.url+":20002/auth/signEnsureUserName",
            method:"POST",
            header:{
                "Content-Type":"application/json"
            },
            data:{
                "username":this.username,
            },
        }
        fetch.fetch(paras).then(Response=>{
            var retData = JSON.parse(Response.data.data)
            //console.log(retData)
            if(retData.code==2){
                //未注册
                cipher.rsa({
                action: 'encrypt',
                //待加密的文本内容
                text: that.password,
                //base64编码后的加密公钥
                key:retData.data,
                    success: function(data) {
                        //console.log(data)
                        let pwd = data.text
                        fetch.fetch({
                            url:that.$app.$def.url+":20002/auth/sign",
                            method:"POST",
                            header:{
                                "Content-Type":"application/json"
                            },
                            data:{
                                "username":that.username,
                                "password":that.password,//在真机上，生成的pwd格式不对，解析会出错
                            },
                        }).then(Response=>{
                            var rData = JSON.parse(Response.data.data)
                            //console.log(rData)
                            if(rData.code==2){
                                that.signnotice.text="注册成功,请登录"
                            }else{
                                that.signnotice.text="未知错误"
                            }
                            that.signnotice.show=true;
                        }).catch(Error=>{
                            console.error(Error);
                        })
                    },
                    fail: function(data, code) {
                        console.log(`### cipher.rsa fail ### ${code}: ${data}`)
                    }
                })
            }else{
                that.signnotice.text="用户名已存在"
            }
        }).catch(Error=>{
            console.log(Error)
        })




        // let that = this
        // var paras={
        //     url:this.$app.$def.url+":20002/auth/sign",
        //     method:"POST",
        //     header:{
        //         "Content-Type":"application/json"
        //     },
        //     data:{
        //         "username":this.username,
        //         "password":this.password
        //     },
        // }
        // fetch.fetch(paras).then((response)=>{
        //     try{
                
        //         var data = JSON.parse(response.data.data)
                
        //         if(data.code==3){
        //             that.signnotice.text="用户名已存在"
        //         }else if(data.code==2){

        //             that.signnotice.text="注册成功,请登录"
        //         }else{
        //             console.error(response)
        //         }
        //         that.signnotice.show=true;
        //     }catch(err){
        //         console.error(err)
        //     }
        // }).catch(err=>{
        //     console.error(err);
        // })
    },
    usernameChanged(e){
        
        this.username=e.value
    },
    passwordChanged(e){
        this.password=e.value
    }
}
</script>
<style>
.wrapper{
    width: 100%;
    height: 100%;
    position:relative;
    top: 0px;
    left: 0px;
    
}
.bg{
    width: 100%;
    height: 100%;
    position:absolute;
    background-image: url("../../assets/images/log/background.png")

}
.form{
    width: 450px;
    height: 400px;
    position: absolute;
    top: 614px;
    left: 150px;
    
}
.login:active{
    background-color:rgb(215, 246, 248);
}
.btn{
    position:absolute;
    width: 350px;
    height: 80px;
    border-radius: 40px;
    background-color:#00aeec;
    left: 50px;
    color:#ffffff;
    font-size: 30px;
    font-family: 'Microsoft YaHei';

}
#log{
    top:180px;
}
#sign:active{
    background-color: #00ffff;
}
#sign{
    top: 270px;
    background-color:#ffffff;
    color:#00aeec;
    border: 3px solid #00aeec;
}
.textinput{
    position:absolute;
    width: 370px;
    height: 80px;
    border-top-right-radius: 20px;
    border-bottom-right-radius: 20px;
    background-color: rgba(225, 220, 220,0.75);
    left: 80px;
}
#pw{
    top: 90px;
}

#logicon{
    width: 80px;
    height: 80px;
    background-color: rgba(225, 220, 220,0.75);
    border-right:1px solid #000000;
    border-top-left-radius:20px;
    border-bottom-left-radius: 20px;
}
#logiconpw{
    width: 80px;
    height: 80px;
    background-color: rgba(225, 220, 220,0.75);
    border-right:1px solid #000000;
    border-top-left-radius:20px;
    border-bottom-left-radius: 20px;
    top:90px;
    left:-80px;
}
</style>
